<?php

/**
 * @file
 * Submodule to enable compatibility of Facebook Likebox with patterns module.
 */

/**
 *
 * Implements hook_patterns().
 *
 * Declares the module able to handle patterns (http://drupal.org/project/patterns)
 * configurations.
 *
 * @param $data
 */
function fb_likebox_patterns($data = NULL) {
  $actions['fb_likebox'] = array(
      PATTERNS_INFO   => t('Settings for Facebook Likebox module'),
      PATTERNS_MODIFY => array('block_admin_configure'),
  );
  return $actions;
}

/**
 *
 * Implements hook_patterns_validate().
 * Check the input to see if the values are according to what is expected by the module.
 *
 * @TO-DO: Analyze and check values to inject in the form (i.e.: colorscheme should be
 * 'dark' or 'light')
 *
 * @param $action
 * @param $tag
 * @param $data
 */
function fb_likebox_patterns_patterns_validate($action, $tag, &$data) {
  //Implementation required by the current version of patterns.
  return patterns_results(PATTERNS_SUCCESS, $msg);
}

/**
 *
 * Implements hook_patterns_callbacks().
 * Returns the array of form IDs to run. Called after validate.
 *
 * @param $action
 * @param $tag
 * @param $data
 */
function fb_likebox_patterns_patterns_callbacks($action, $tag, &$data) {
  //Just return the form ids specified above. No custom functions used here.
  //We call the main hook back in case there are many actions to implement, it is
  //called after hook_patterns_validate().
  //Implementation required by the current version of patterns.
  $desc = fb_likebox_patterns_patterns();
  $result = $desc[$tag][$action];
  return patterns_results(PATTERNS_SUCCESS, t('Execution successful'), $result);
}

/**
 *
 * Implements hook_patterns_build().
 * Gets the form data from the action.
 *
 * @param $action
 * @param $form_id
 * @param $data
 * @param $a
 */
function fb_likebox_patterns_patterns_build($action, $form_id, &$data = NULL, &$a) {
  //Prepare for valid processing of this type of component.
  //Called after hook_patterns_callbacks().
  //Implementation required by the current version of patterns.
  return patterns_results(PATTERNS_SUCCESS, t('Execution successful'), $data);
}

/**
 *
 * Implements hook_patterns_params().
 * Returns extra params that the form may require.
 *
 * @param $action
 * @param $form_id
 * @param $data
 * @param $a
 */
function fb_likebox_patterns_patterns_params($action, $form_id, &$data, &$a) {
  //   if ($form_id == 'block_admin_configure') {
  //     $result = array($data['module'], $data['delta']);
  //   }
  //Called after hook_patterns_build().
  //Implementation required by the current version of patterns.
  return patterns_results(PATTERNS_SUCCESS, t('Execution successful'), $result);
}

/**
 *
 * Implements hook_patterns_cleanup().
 * Performs optional additional operations, after the execution
 * of the action has finished.
 *
 * @param $action
 * @param $tag
 * @param $data
 */
function fb_likebox_patterns_patterns_cleanup($action, $tag, &$data) {
  //Called after hook_patterns_params().
  //Implementation required by the current version of patterns.
  return patterns_results();
}

/**
 * Implements hook_patterns_directory().
 */
function fb_likebox_patterns_patterns_directory() {
  return drupal_get_path('module', 'fb_likebox_patterns') . '/patterns/';
}
